import { ReactElement } from 'react';
import Tippy from '@tippyjs/react/headless';
import type { AxisDomain } from 'd3-axis';

import { CategoryValueDatum, Margins } from '@/types';

import { TempTabbableTooltipBarChart } from './TempTabbableTooltipBarChart';
import { Tooltip } from './Tooltip';
import { useTabbableTooltip } from './useTabbableTooltip';

export type TempTabbableTooltipBarChartWithTooltipProps<CategoryT extends AxisDomain> = {
  data: CategoryValueDatum<CategoryT, number>[];
  width: number;
  height: number;
  margins: Margins;
  ariaLabel?: string;
  ariaLabelledby?: string;
  ariaRoleDescription?: string;
  description?: string;
  ariaDescribedby?: string;
  datumAriaRoleDescription?: (datum: CategoryValueDatum<CategoryT, number>) => string;
  datumAriaLabel?: (datum: CategoryValueDatum<CategoryT, number>) => string;
  datumAriaDescription?: (datum: CategoryValueDatum<CategoryT, number>) => string;
  transitionSeconds?: number;
  renderTooltipContent: (datum: CategoryValueDatum<CategoryT, number>) => ReactElement | null;
};

export function TempTabbableTooltipBarChartWithTooltip<CategoryT extends AxisDomain>(
  props: TempTabbableTooltipBarChartWithTooltipProps<CategoryT>
): ReactElement | null {
  const [interactionProps, referenceProps, tippyProps] = useTabbableTooltip(props.renderTooltipContent);
  return (
    <>
      <TempTabbableTooltipBarChart svgRef={referenceProps.ref} {...props} {...interactionProps} />
      <Tippy {...tippyProps} />
    </>
  );
}
